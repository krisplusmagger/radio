id: customModule_Serlizsig
label: Serlizsig
category: '[customModule]'

templates:
  imports: from gnuradio import customModule
  make: customModule.Serlizsig(${fft_len}, ${occupied_carriers}, ${len_tag_key},
        ${packet_len_tag_key}, ${symbols_skipped}, ${carr_offset_key}, ${input_is_shifted}, ${signal_filename })

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#     * default
parameters:
-   id: fft_len
    label: FFT length
    dtype: int
    default: fft_len
    hide: ${ 'part' if fft_len == 1 else 'none' }
-   id: occupied_carriers
    label: Occupied Carriers
    dtype: raw
-   id: len_tag_key
    label: Length Tag Key
    dtype: string
-   id: packet_len_tag_key
    label: Packet Length Tag Key
    dtype: string
    default: '""'
    hide: ${ ('none' if packet_len_tag_key else 'part') }
-   id: symbols_skipped
    label: Symbols skipped
    dtype: int
    default: '0'
    hide: ${ ('none' if symbols_skipped else 'part') }
-   id: carr_offset_key
    label: Carrier Offset Key
    dtype: string
    default: '""'
    hide: ${ ('none' if carr_offset_key else 'part') }
-   id: input_is_shifted
    label: Input is shifted
    dtype: bool
    default: 'True'
    hide: ${ ('part' if input_is_shifted else 'none') }
-   id: signal_filename
    label: Signal Filename
    dtype: string      
#- id: ...
#  label: ...
#  dtype: ...

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: stream
    dtype: complex
    vlen: ${ fft_len }

outputs:
-   domain: message
    dtype: int
#  vlen: ...
#  optional: ...

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
